import { Icon, IconProps } from '@bnb-chain/space';
import { keyframes } from '@emotion/react';

import { useAppSelector } from '@/modules/store/StoreProvider';

export const RefreshingIcon = (props: IconProps) => {
  const isGlobalFeeLoading = useAppSelector((state) => state.transfer.isGlobalFeeLoading);
  const isRefreshing = useAppSelector((state) => state.transfer.isRefreshing);
  return (
    <Icon
      xmlns="http://www.w3.org/2000/svg"
      width="42px"
      height="42px"
      viewBox="0 0 42 42"
      fill="none"
      sx={{
        '.refreshBorder': {
          animation: `${dash} 30s forwards infinite`,
        },
      }}
      {...props}
    >
      <circle
        className={!isGlobalFeeLoading && isRefreshing ? 'refreshBorder' : ''}
        cx="21"
        cy="21"
        r="20.5"
        fill="currentColor"
        stroke="#FFE900"
        strokeDasharray={128.76}
        strokeDashoffset={128.76}
      />
      <mask
        id="mask0_28149_328880"
        style={{ maskType: 'alpha' }}
        maskUnits="userSpaceOnUse"
        x="11"
        y="11"
        width="20"
        height="20"
      >
        <rect x="11" y="11" width="20" height="20" fill="#D9D9D9" />
      </mask>
      <g mask="url(#mask0_28149_328880)">
        <path
          d="M21.0447 27.4596C19.2423 27.4596 17.7084 26.8325 16.443 25.5782C15.1775 24.3239 14.5447 22.7982 14.5447 21.0013V20.3507L13.4422 21.4532C13.3268 21.5686 13.1817 21.6276 13.007 21.6303C12.8324 21.6329 12.6847 21.5739 12.5639 21.4532C12.4432 21.3325 12.3828 21.1862 12.3828 21.0142C12.3828 20.8421 12.4432 20.6957 12.5639 20.5751L14.6424 18.4965C14.7931 18.3458 14.9689 18.2705 15.1697 18.2705C15.3705 18.2705 15.5463 18.3458 15.697 18.4965L17.7755 20.5751C17.8908 20.6905 17.9498 20.8355 17.9526 21.0101C17.9552 21.1848 17.8962 21.3325 17.7755 21.4532C17.6547 21.5739 17.5083 21.6342 17.3364 21.6342C17.1644 21.6342 17.018 21.5739 16.8972 21.4532L15.7947 20.3507V21.0013C15.7947 22.4489 16.3043 23.6789 17.3234 24.6913C18.3427 25.7035 19.5832 26.2096 21.0447 26.2096C21.2883 26.2096 21.5311 26.1931 21.773 26.1601C22.0151 26.1269 22.2536 26.0702 22.4886 25.9901C22.666 25.9367 22.8334 25.9423 22.9909 26.0069C23.1486 26.0715 23.2669 26.1813 23.3459 26.3363C23.425 26.4998 23.43 26.6624 23.3611 26.8242C23.2923 26.986 23.1691 27.0937 22.9918 27.1471C22.6777 27.2582 22.3567 27.3381 22.0286 27.3867C21.7007 27.4353 21.3727 27.4596 21.0447 27.4596ZM20.9614 15.793C20.7177 15.793 20.475 15.8095 20.233 15.8426C19.9909 15.8757 19.7524 15.9324 19.5174 16.0126C19.34 16.0659 19.1705 16.0603 19.0086 15.9957C18.8468 15.9311 18.7264 15.8213 18.6472 15.6663C18.5682 15.5114 18.5618 15.3531 18.628 15.1913C18.6943 15.0294 18.8118 14.9217 18.9805 14.8684C19.3032 14.7573 19.6298 14.6753 19.9605 14.6223C20.2912 14.5694 20.6248 14.543 20.9614 14.543C22.7637 14.543 24.2976 15.1701 25.563 16.4244C26.8286 17.6787 27.4614 19.2044 27.4614 21.0013V21.6519L28.5639 20.5494C28.6793 20.434 28.8243 20.375 28.9991 20.3723C29.1736 20.3697 29.3214 20.4287 29.4422 20.5494C29.5629 20.6701 29.6232 20.8164 29.6232 20.9884C29.6232 21.1605 29.5629 21.3069 29.4422 21.4276L27.3636 23.5061C27.213 23.6568 27.0372 23.7321 26.8364 23.7321C26.6355 23.7321 26.4598 23.6568 26.3091 23.5061L24.2305 21.4276C24.1152 21.3121 24.0562 21.1671 24.0534 20.9926C24.0508 20.8178 24.1098 20.6701 24.2305 20.5494C24.3514 20.4287 24.4977 20.3684 24.6697 20.3684C24.8416 20.3684 24.988 20.4287 25.1089 20.5494L26.2114 21.6519V21.0013C26.2114 19.5537 25.7018 18.3237 24.6826 17.3113C23.6633 16.2991 22.4229 15.793 20.9614 15.793Z"
          fill="#FFE900"
        />
      </g>
    </Icon>
  );
};

const dash = keyframes`
  from {
    stroke-dashoffset: 128.76;
  }
  to {
    stroke-dashoffset: 0;
  }
`;
